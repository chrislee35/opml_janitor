#!/usr/bin/env ruby
require 'opml_janitor'
require 'getoptlong'
require 'time'

opts = GetoptLong.new(
  [ '--help', '-h', GetoptLong::NO_ARGUMENT ],
  [ '--debug', '-v', GetoptLong::NO_ARGUMENT ],
  [ '--since', '-s', GetoptLong::REQUIRED_ARGUMENT ],
  [ '--input', '-i', GetoptLong::REQUIRED_ARGUMENT ],
  [ '--output', '-o', GetoptLong::REQUIRED_ARGUMENT ],
  [ '--threads', '-t', GetoptLong::REQUIRED_ARGUMENT ]
)

options = {
  :help => false,
  :debug => false,
  :threads => 1,
  :since => nil,
  :input => $stdin,
  :output => $stdout
}

opts.each do |opt, arg|
	case opt
	when '--help'
		options[:help] = true
	when '--debug'
		options[:debug] = true
  when '--since'
    options[:since] = Time.parse(arg)
  when '--input'
    options[:input] = File.open(arg, 'r')
  when '--output'
    options[:output] = File.open(arg, 'w')
  when '--threads'
    options[:threads] = arg.to_i
  else
    options[:help] = true
  end
end

if options[:help]
  puts "Usage: #{$0} [-hv] [-t <# threads>] [-s <date>] [-i <input file>] [-o <output file>]"
  puts "  -h    displays this help text"
  puts "  -v    turns on debugging messages (encouraged)"
  puts "  -t #  set the number of threads (default 1) (highly encouraged)"
  puts "  -i    specify a file for input (default is standard input)"
  puts "  -o    specify a file for output (default is standard output)"
  exit
end

opml_janitor = OpmlJanitor::Parser.from_filehandle(options[:input])
opml_janitor.debug = options[:debug]
opml_janitor.threads = options[:threads]
opml_janitor.validate!(options[:since])
result = opml_janitor.to_xml
options[:output].puts(result)

